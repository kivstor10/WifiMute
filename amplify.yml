version: 1
frontend:
  phases:
    preBuild:
      commands:
        # Clean up node_modules and lock files for a fresh install
        - rm -rf node_modules
        - rm -f package-lock.json yarn.lock

        # Install all dependencies including backend ones
        - npm install --unsafe-perm=true
        # Optional: You can keep these if you want to be extra sure about specific @aws-amplify versions
        # - npm install @aws-amplify/backend@latest @aws-amplify/backend-data@latest @aws-amplify/backend-cli@latest

    build:
      commands:
        # First, deploy your backend changes. This command generates amplify_outputs.json in the project root.
        - npx ampx pipeline-deploy --branch $AMPLIFY_BRANCH --app-id $AMPLIFY_APP_ID

        # SECOND, BUILD YOUR FRONTEND APPLICATION!
        - npm run build

        # NEW LINE ADDED: Explicitly copy amplify_outputs.json into the 'dist' directory.
        # This ensures the frontend build output includes the configuration.
        - cp amplify_outputs.json dist/

    postBuild:
      commands:
        - echo "Frontend build and backend deployment complete!"

  artifacts:
    # This points to the directory created by your 'npm run build' command
    baseDirectory: dist
    files:
      - '**/*' # Include all files generated by the frontend build, including amplify_outputs.json
  cache:
    paths:
      - node_modules/**/*