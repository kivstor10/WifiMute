version: 1
backend:
  phases:
    install:
      runtime-versions:
        nodejs: 22 # Keep this, it's the declarative way Amplify *should* handle it.
      commands:
        # 1. Add echo statements to explicitly show progress
        - echo "--- Starting Backend Install Phase ---"
        - echo "Attempting to install and use Node.js 22 with nvm..."

        # 2. Force nvm to install and use Node.js 22
        #    Use `source $NVM_DIR/nvm.sh` to ensure nvm commands are available in the current shell
        #    This is often needed in non-interactive shell environments like build scripts.
        - |- # This pipe symbol allows multiline command blocks, ensuring all lines execute in one go
          if [ -s "$NVM_DIR/nvm.sh" ]; then
            . "$NVM_DIR/nvm.sh"
          elif [ -s "/usr/local/nvm/nvm.sh" ]; then # Common path for nvm in Amplify/CodeBuild
            . "/usr/local/nvm/nvm.sh"
          fi
          nvm install 22 || echo "nvm install 22 failed, continuing anyway..." # Install (or verify installed)
          nvm use 22 || echo "nvm use 22 failed, continuing anyway..."         # Use Node 22
          node -v # VERIFY NODE VERSION
          npm -v  # VERIFY NPM VERSION
          echo "--- Node.js version check complete ---"

        # 3. Now run npm ci, which should use Node.js 22
        - npm ci --cache .npm --prefer-offline 

        - echo "--- Backend Install Phase Complete ---"

    build:
      commands:
        # The Node.js version should now be 22 from the install phase.
        # You can add node -v here again for double-checking if needed.
        # - node -v 

        # Keep the global installation of Amplify backend CLI
        - npm install -g @aws-amplify/backend-cli@latest 

        # Run the deployment command
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
frontend:
  phases:
    build:
      commands:
        - npm run build
  artifacts:
    baseDirectory: dist
    files:
      - '**/*'
  cache:
    paths:
      - .npm/**/*
      - node_modules/**/*