version: 1
frontend:
  phases:
    preBuild:
      commands:
        # Clean up node_modules and lock files for a fresh install
        - rm -rf node_modules
        - rm -f package-lock.json yarn.lock

        # Install all dependencies including backend ones
        - npm install --unsafe-perm=true
        # Optional: You can keep these if you want to be extra sure about specific @aws-amplify versions
        # - npm install @aws-amplify/backend@latest @aws-amplify/backend-data@latest @aws-amplify/backend-cli@latest

    build:
      commands:
        # First, deploy your backend changes (this uses the installed backend packages)
        - npx ampx pipeline-deploy --branch $AMPLIFY_BRANCH --app-id $AMPLIFY_APP_ID

        # SECOND, BUILD YOUR FRONTEND APPLICATION!
        # REPLACE 'npm run build' with your actual frontend build command from package.json
        - npm run build # <--- THIS IS THE CRITICAL LINE TO ENSURE YOUR FRONTEND IS BUILT
                        # If you use Vite, it's 'npm run build', if CRA, it's 'npm run build'

    postBuild:
      commands:
        # Any commands that need to run AFTER the frontend build (often empty)
        - echo "Frontend build and backend deployment complete!"

  artifacts:
    # THIS IS CRITICAL: Point this to the directory created by your 'npm run build' command
    baseDirectory: <YOUR_FRONTEND_BUILD_OUTPUT_DIRECTORY> # <--- REPLACE THIS (e.g., 'build' or 'dist')
    files:
      - '**/*' # Include all files generated by the frontend build
  cache:
    paths:
      - node_modules/**/*