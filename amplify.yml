version: 1
frontend:
  phases:
    preBuild:
      commands:
        # Clean up node_modules and lock files completely
        - rm -rf node_modules
        - rm -f package-lock.json yarn.lock # Remove both, just in case
        # Force a full, fresh install, ensuring optional dependencies are included
        - npm install --unsafe-perm=true # --unsafe-perm can sometimes help with native module builds in CI
        # After a fresh install, then try updating specific Amplify packages to latest
        # (Though, npm install --unsafe-perm=true should pull latests based on package.json already)
        # - npm install @aws-amplify/backend@latest @aws-amplify/backend-data@latest @aws-amplify/backend-cli@latest # Keep this if you want to be extra sure on Amplify specific packages
    build:
      commands:
        # Your backend deployment command
        - npx @aws-amplify/backend-cli pipeline-deploy --branch $AMPLIFY_BRANCH --app-id $AMPLIFY_APP_ID
        # If you have a frontend build command, it would go here (e.g., npm run build)
    postBuild:
      commands:
        # Any post-build steps
  artifacts:
    baseDirectory: . # Or your frontend build output directory (e.g., build, dist)
    files:
      - '**/*' # Include all files if your build generates them in root